package com.example.nagoyameshi.service;

import jakarta.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.stripe.Stripe;
import com.stripe.exception.StripeException;
import com.stripe.model.checkout.Session;
import com.stripe.net.Webhook;
import com.stripe.param.checkout.SessionCreateParams;

@Service
public class StripeService {

    @Value("${stripe.api-key}")
    private String stripeApiKey;

    // Price ID（固定）
    private static final String PRICE_ID = "price_1Rgc5DB6eHNhnOUxyl1DHeSp"; // ← 実際のPrice IDに置き換えて！

    /**
     * サブスクリプション用Stripeセッションを作成してSession IDを返す
     */
    public String createStripeSession(HttpServletRequest httpServletRequest) {
        Stripe.apiKey = stripeApiKey;

        // ベースURL（http://localhost:8080など）
        String baseUrl = httpServletRequest.getScheme() + "://" +
                httpServletRequest.getServerName() +
                (httpServletRequest.getServerPort() == 80 || httpServletRequest.getServerPort() == 443 ? "" : ":" + httpServletRequest.getServerPort());


        // Stripeセッション作成
        SessionCreateParams params = SessionCreateParams.builder()
            .addPaymentMethodType(SessionCreateParams.PaymentMethodType.CARD)
            .addLineItem(
                SessionCreateParams.LineItem.builder()
                    .setPrice(PRICE_ID) // ※ここはProduct IDではなく「Price ID」
                    .setQuantity(1L)
                    .build()
            )
            .setMode(SessionCreateParams.Mode.SUBSCRIPTION)
            .setSuccessUrl(baseUrl + "/subscription/success") // 成功時
            .setCancelUrl(baseUrl + "/subscription/cancel")   // キャンセル時
            .build();

        try {
            Session session = Session.create(params);
            return session.getId();
        } catch (StripeException e) {
            e.printStackTrace();
            return "";
        }
    }
    
    public void processSessionCompleted(String payload) {
        try {
            // WebHookの署名検証などは本来必要（ここでは簡略化）
            Event event = Webhook.constructEvent(payload, null, stripeEndpointSecret);
            if ("checkout.session.completed".equals(event.getType())) {
                Session session = (Session) event.getDataObjectDeserializer().getObject().get();
                String subscriptionId = session.getSubscription();

                // メタデータなどからユーザーIDを取り出す（session.getClientReferenceIdなどを使って）
                String userIdStr = session.getClientReferenceId(); // ここは createStripeSession で指定してね
                Integer userId = Integer.parseInt(userIdStr);

                userService.updateSubscriptionId(userId, subscriptionId);
                System.out.println("Subscription saved for user: " + userId + " → " + subscriptionId);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    



}
